{"ast":null,"code":"var _jsxFileName = \"/Users/rashadulhaque/Documents/projects/php-mysql-react-project/frontend/src/views/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport TaskItem from \"../components/TaskItem\";\nimport Notification from \"../components/Notification\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasksList, setTasks] = useState([]);\n  const [isNotify, setIsNotify] = useState(false);\n  const [idnr, setIdnr] = useState();\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await api.getTasks();\n        const sortedTasks = response === null || response === void 0 ? void 0 : response.data.sort((a, b) => a.completed === b.completed ? 0 : a.completed ? 1 : -1);\n        setTasks(sortedTasks);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-wrap justify-center items-center gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-semibold mb-4 text-center w-full shadow-sm p-4\",\n      children: \"Tasks List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), !tasksList.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center flex flex-col justify-center items-center gap-8 xs:gap-4 sm:gap-6 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-center items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Your Idea List Is Empty!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/empty.png\",\n          alt: \"Empty Task List\",\n          className: \"mt-2 max-w-[400px] mx-auto xs:w-[200px] sm:w-[320px]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-task\",\n        className: \"shadow-md rounded-full p-2 w-16 h-16 flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          className: \"w-10 h-10\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), tasksList.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task,\n      setIsNotify: setIsNotify,\n      isNotify: isNotify,\n      setIdnr: setIdnr\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Notification, {\n      idnr: idnr,\n      isNotify: isNotify,\n      setIsNotify: setIsNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"FoAMn9RNJk9j0HnpXlTZij4sGfk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","TaskItem","Notification","Link","api","jsxDEV","_jsxDEV","TaskList","_s","tasksList","setTasks","isNotify","setIsNotify","idnr","setIdnr","fetchTasks","response","getTasks","sortedTasks","data","sort","a","b","completed","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","src","alt","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","map","task","id","_c","$RefreshReg$"],"sources":["/Users/rashadulhaque/Documents/projects/php-mysql-react-project/frontend/src/views/TaskList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TaskItem from \"../components/TaskItem\";\nimport Notification from \"../components/Notification\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../api\";\n\nconst TaskList = () => {\n  const [tasksList, setTasks] = useState([]);\n  const [isNotify, setIsNotify] = useState(false);\n  const [idnr, setIdnr] = useState();\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await api.getTasks(); \n        const sortedTasks = response?.data.sort((a,b) =>\n        a.completed === b.completed ? 0 : a.completed ? 1 : -1\n      );\n        setTasks(sortedTasks);\n      } catch (error) {\n        console.error(\"Error fetching tasks:\", error);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  return (\n    <div className=\"flex flex-wrap justify-center items-center gap-3\">\n      <h1 className=\"text-2xl font-semibold mb-4 text-center w-full shadow-sm p-4\">\n        Tasks List\n      </h1>\n      {!tasksList.length && (\n        <div className=\"text-center flex flex-col justify-center items-center gap-8 xs:gap-4 sm:gap-6 mt-4\">\n          <div className=\"flex flex-col justify-center items-center gap-4\">\n            <p className=\"text-gray-500\">Your Idea List Is Empty!</p>\n            \n          <img\n            src=\"/empty.png\" \n            alt=\"Empty Task List\"\n            className=\"mt-2 max-w-[400px] mx-auto xs:w-[200px] sm:w-[320px]\"\n          />\n          </div>\n          <Link\n              to=\"/create-task\"\n              className=\"shadow-md rounded-full p-2 w-16 h-16 flex items-center justify-center\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                className=\"w-10 h-10\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                />\n              </svg>\n            </Link>\n        </div>\n      )}\n\n      {tasksList.map((task) => (\n        <TaskItem key={task.id} task={task} setIsNotify={setIsNotify} isNotify={isNotify} setIdnr={setIdnr}/>\n      ))}\n      <Notification idnr={idnr} isNotify={isNotify} setIsNotify={setIsNotify} />\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}